// <auto-generated />
using AsyncInn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsyncInn.Migrations
{
    [DbContext(typeof(AsyncInnDbContext))]
    [Migration("20190629223856_seedData2")]
    partial class seedData2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsyncInn.Models.Amenities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Microwave"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Fridge"
                        },
                        new
                        {
                            ID = 3,
                            Name = "A/C"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Hot Tub"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Deck"
                        },
                        new
                        {
                            ID = 6,
                            Name = "DJ"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Complementary Bar"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.Hotel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<int>("PhoneNumber");

                    b.Property<string>("State");

                    b.Property<string>("StreetAddress");

                    b.HasKey("ID");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            City = "Tacoma",
                            Name = "Loc of Ness Inn",
                            PhoneNumber = 8675309,
                            State = "WA",
                            StreetAddress = "204 Just Around the River Bend Ave"
                        },
                        new
                        {
                            ID = 2,
                            City = "Bellingham",
                            Name = "Samsquach Inn",
                            PhoneNumber = 555849,
                            State = "WA",
                            StreetAddress = "7156 Yonder Forest Ln"
                        },
                        new
                        {
                            ID = 3,
                            City = "Redmond",
                            Name = "The House that Jack Built Inn",
                            PhoneNumber = 555555,
                            State = "WA",
                            StreetAddress = "8945 Breadcrumb St"
                        },
                        new
                        {
                            ID = 4,
                            City = "Seattle",
                            Name = "Holy Diver Inn",
                            PhoneNumber = 784512,
                            State = "WA",
                            StreetAddress = "2149 Above All Ave"
                        },
                        new
                        {
                            ID = 5,
                            City = "Sydney",
                            Name = "Thunder from Down Under",
                            PhoneNumber = 951623,
                            State = "OR",
                            StreetAddress = "52 Wallibee Way"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRoom", b =>
                {
                    b.Property<int>("HotelID");

                    b.Property<int>("RoomNumber");

                    b.Property<bool>("PetFriendly");

                    b.Property<decimal>("Rate");

                    b.Property<int>("RoomID");

                    b.HasKey("HotelID", "RoomNumber");

                    b.HasIndex("RoomID");

                    b.ToTable("HotelRooms");
                });

            modelBuilder.Entity("AsyncInn.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Layout");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Layout = 1,
                            Name = "Oasis"
                        },
                        new
                        {
                            ID = 2,
                            Layout = 2,
                            Name = "Wonderwall"
                        },
                        new
                        {
                            ID = 3,
                            Layout = 0,
                            Name = "Anberlin"
                        },
                        new
                        {
                            ID = 4,
                            Layout = 1,
                            Name = "Paperthin Hymn"
                        },
                        new
                        {
                            ID = 5,
                            Layout = 0,
                            Name = "Paramore"
                        },
                        new
                        {
                            ID = 6,
                            Layout = 2,
                            Name = "Riot"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenities", b =>
                {
                    b.Property<int>("RoomID");

                    b.Property<int>("AmenitiesID");

                    b.HasKey("RoomID", "AmenitiesID");

                    b.HasIndex("AmenitiesID");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRoom", b =>
                {
                    b.HasOne("AsyncInn.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany("HotelRoom")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenities", b =>
                {
                    b.HasOne("AsyncInn.Models.Amenities", "Amenities")
                        .WithMany("Rooms")
                        .HasForeignKey("AmenitiesID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
